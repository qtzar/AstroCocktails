---
import fs from 'node:fs';
import path from 'node:path';
import {type CollectionEntry, getCollection} from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import { render } from 'astro:content';
import Rating from "../../components/Rating.astro";

export async function getStaticPaths() {
    const allCocktails = await getCollection('cocktails');

    return allCocktails.map((post) => ({
        params: { slug: post.id },
        props: post,
    }));
}

type Props = CollectionEntry<'cocktails'>;

const post = Astro.props;
const { Content } = await render(post);

const filePath = path.resolve(`docs/${post.id}.md`);
let createdAt: Date | null = null;
let updatedAt: Date | null = null;

try {
    const stats = fs.statSync(filePath);
    createdAt = stats.birthtime;
    updatedAt = stats.mtime;
} catch (e) {
    console.warn(`Unable to read file info for: ${post.id}`, e);
}


---

<Layout title={post.data.title}>
    <main class="max-w-5xl mx-auto p-6 bg-white/90 rounded-lg shadow mt-8 border border-zinc-300">
        <a href="/" class="text-sm text-zinc-600 hover:underline inline-block mb-4">
            ‚Üê Back to index
        </a>

        <h1 class="text-3xl font-bold mb-2">{post.data.title}</h1>
        <p class="italic text-zinc-600">{post.data.description}</p>
        <Rating rating={post.data.rating} showNumber={true} />


        {post.data.image && (
                <img
                        src={post.data.image}
                        alt={post.data.title}
                        class="w-full max-h-100 object-contain rounded-lg mt-6 shadow-md"
                />
        )}


        <div class="mb-6">
            <h2 class="text-xl font-semibold border-b border-dotted border-zinc-400 pb-1 mt-6 mb-2">üßæ Ingredients</h2>
            <ul class="list-disc pl-6 space-y-1 text-zinc-700">
                {post.data.ingredients?.map((item) => <li>{item}</li>)}
            </ul>
        </div>

        <div class="mb-6">
            <h2 class="text-xl font-semibold border-b border-dotted border-zinc-400 pb-1 mb-2">üîß Instructions</h2>
            <Content />
        </div>

        {post.data.notes && (
                <div class="mt-8 p-4 bg-yellow-50 border-l-4 border-yellow-400">
                    <h3 class="font-semibold text-yellow-700">Notes</h3>
                    <p class="text-sm text-yellow-800">{post.data.notes}</p>
                </div>
        )}

        {createdAt && (
                <p class="text-xs text-zinc-500 mt-4 italic">
                    Created: {createdAt.toLocaleDateString()}
                </p>
        )}

        {updatedAt && createdAt?.getTime() !== updatedAt.getTime() && (
                <p class="text-xs text-zinc-500 italic">
                    Last updated: {updatedAt.toLocaleDateString()}
                </p>
        )}


    </main>
</Layout>
