---
import fs from 'node:fs';
import path from 'node:path';
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import { render } from 'astro:content';
import Rating from '../../components/Rating.astro';
import CocktailLabels from '../../components/CocktailLabels.astro';

export async function getStaticPaths() {
  const allCocktails = await getCollection('cocktails');

  return allCocktails.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

const cocktail = Astro.props;
const { Content } = await render(cocktail);

const filePath = path.resolve(`docs/${cocktail.id}.md`);
let updatedAt: Date | null = null;

try {
  const stats = fs.statSync(filePath);
  updatedAt = stats.mtime;
} catch (e) {
  console.warn(`Unable to read file info for: ${cocktail.id}`, e);
}
---

<Layout title={cocktail.data.title}>
  <main class="mx-auto mt-8 max-w-5xl rounded-lg border border-zinc-300 bg-white/90 p-6 shadow">
    <a href="/" class="mb-4 inline-block text-sm text-zinc-600 hover:underline"> ‚Üê Back to index </a>

    <h1 class="font-title mb-2 text-3xl font-bold">{cocktail.data.title}</h1>
    <p class="text-zinc-600 italic">{cocktail.data.description}</p>
    <Rating rating={cocktail.data.rating} showNumber={true} />

    {
      cocktail.data.image && (
        <img
          src={cocktail.data.image}
          alt={cocktail.data.title}
          class="mt-6 max-h-100 w-full rounded-lg object-contain shadow-md"
        />
      )
    }

    <CocktailLabels cocktail={cocktail} />

    {
      cocktail.data.source && (
        <p class="mb-4 text-sm text-zinc-600 italic">
          Source:{' '}
          {cocktail.data.source.startsWith('http') ? (
            <a href={cocktail.data.source} target="_blank" rel="noopener noreferrer" class="underline">
              {cocktail.data.source}
            </a>
          ) : (
            cocktail.data.source
          )}
        </p>
      )
    }

    <div class="mb-6">
      <h2 class="mt-6 mb-2 border-b border-dotted border-zinc-400 pb-1 text-xl font-semibold">üßæ Ingredients</h2>
      <ul class="list-disc space-y-1 pl-6 text-zinc-700">
        {cocktail.data.ingredients?.map((item) => <li>{item}</li>)}
      </ul>
    </div>

    <div class="mb-6">
      <h2 class="mb-2 border-b border-dotted border-zinc-400 pb-1 text-xl font-semibold">üîß Instructions</h2>
      <Content />
    </div>

    {
      cocktail.data.notes && (
        <div class="mt-8 border-l-4 border-yellow-700 bg-yellow-200 p-4">
          <h3 class="font-semibold text-yellow-700">Note:</h3>
          <p class="text-sm text-yellow-900">{cocktail.data.notes}</p>
        </div>
      )
    }

    <div class="mt-4 flex justify-center">
      <img
        src={`https://api.qrserver.com/v1/create-qr-code/?size=100x100&data=${encodeURIComponent('https://qtzar.github.io/AstroCocktails/cocktails/' + cocktail.id)}`}
        alt={`QR Code for ${cocktail.data.title}`}
        class="h-30 w-30 rounded-md shadow transition hover:scale-105"
      />
    </div>

    {updatedAt && <p class="float-end text-xs text-zinc-500 italic">Updated: {updatedAt.toLocaleDateString()}</p>}
  </main>
</Layout>
