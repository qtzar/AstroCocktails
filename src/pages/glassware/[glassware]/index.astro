---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import type { APIContext } from 'astro';
import CocktailCard from '../../../components/CocktailCard.astro';

export async function getStaticPaths() {
  const allCocktails = await getCollection('cocktails');
  const uniqueGlassware = Array.from(new Set(allCocktails.map((c) => c.data.glassware?.toLowerCase()).filter(Boolean)));

  return uniqueGlassware.map((glass) => ({
    params: { glassware: glass },
  }));
}

const { params } = Astro as APIContext;
const glassware = params.glassware;

const allCocktails = await getCollection('cocktails');

const cocktails = allCocktails.filter((c) => c.data.glassware?.toLowerCase() === glassware);
---

<Layout title={`${glassware!.charAt(0).toUpperCase() + glassware!.slice(1)} Cocktails`}>
  <main class="mx-auto max-w-4xl p-8">
    <a href="/glassware" class="mb-6 inline-block text-sm text-zinc-600 hover:underline"> ‚Üê Back to Glassware Index </a>

    <h1 class="mb-6 border-b border-dotted border-zinc-400 pb-2 text-3xl font-bold capitalize">
      {glassware} Cocktails
    </h1>

    {
      cocktails.length === 0 ? (
        <p class="text-zinc-600 italic">No cocktails found for this glass type. Might be time to try something new!</p>
      ) : (
        <ul class="grid grid-cols-[repeat(auto-fill,minmax(250px,1fr))] gap-6">
          {cocktails.map((entry) => (
            <CocktailCard cocktail={entry} />
          ))}
        </ul>
      )
    }
  </main>
</Layout>
